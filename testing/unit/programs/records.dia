State { }

fun init: { } -> { }
  arg -> { }

export fun add_two_numbers: { x: Uint, y: Uint } -> Uint
  args ->
    args.x + args.y

export fun output_twice: Uint -> { x: Uint, y: Uint }
  x -> { x = x, y = x + 1 }

fun add_all_innards: { one: { x: Uint, y: Uint }, two: { x: Uint, y: Uint } } -> { xs: Uint, ys: Uint }
  args -> { xs = args.one.x + args.two.x, ys = args.one.y + args.two.y }

export fun return_four_numbers: { x: Uint, y: Uint, z: Uint, w: Uint } -> { x: Uint, y: Uint, z: Uint, w: Uint }
  args -> args

export fun add_four_numbers_with_inner_records: { } -> Uint
  args ->
    let input = { x = { x = 1, y = 1 }, y = 2, z = 3 };
    (input.x).x + (input.x).y + input.y + input.z

export fun add_four_numbers_complex: { x: Uint, y: Uint, z: Uint, w: Uint } -> Uint
  args ->
    let sums = add_all_innards { one = { x = args.x, y = args.y }, two = { x = args.z, y = args.w } };
    sums.xs + sums.ys
